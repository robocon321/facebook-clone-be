server.port=9090
spring.application.name=api-gateway
eureka.client.serviceUrl.defaultZone=http://eureka:password@${DISCOVERYSERVER_HOST:localhost}:9091/eureka
#spring.main.web-application-type=reactive
#spring.main.allow-bean-definition-overriding=true

# DB
spring.datasource.url=${DB_PROTOCOL:jdbc:mysql}://${DB_HOST:localhost}:${DB_PORT:3306}/${DB_DATABASE:facebook_db}
spring.datasource.username=${DB_USER:robocon321}
spring.datasource.password=${DB_PASSWORD:0123456789}
spring.datasource.driver-class-name=${DB_DRIVER:com.mysql.cj.jdbc.Driver}
spring.jpa.properties.hibernate.dialect=${DB_HIBERNATE_DIALECT:org.hibernate.dialect.MySQLDialect}

spring.jpa.hibernate.ddl-auto=update

jwt.secret=${JWT_SECRET:Mfx5s1OloGFBSRv1eoenjq11XIDBY0rxMfx5s1OloGFBSRv1eoenjq11XIDBY0rxMfx5s1OloGFBSRv1eoenjq11XIDBY0rxMfx5s1OloGFBSRv1eoenjq11XIDBY0rxMfx5s1OloGFBSRv1eoenjq11XIDBY0rxMfx5s1OloGFBSRv1eoenjq11XIDBY0rxMfx5s1OloGFBSRv1eoenjq11XIDBY0rxMfx5s1OloGFBSRv1eoenjq11XIDBY0rxMfx5s1OloGFBSRv1eoenjq11XIDBY0rxMfx5s1OloGFBSRv1eoenjq11XIDBY0rxMfx5s1OloGFBSRv1eoenjq11XIDBY0rxMfx5s1OloGFBSRv1eoenjq11XIDBY0rxMfx5s1OloGFBSRv1eoenjq11XIDBY0rxMfx5s1OloGFBSRv1eoenjq11XIDBY0rxMfx5s1OloGFBSRv1eoenjq11XIDBY0rx}
jwt.expiration=${JWT_EXPIRE:3600}

spring.security.user.name=${SPRING_SECURITY_USERNAME:robocon321}
spring.security.user.password=${SPRING_SECURITY_PASSWORD:0123456789}

## Discover Server Route
spring.cloud.gateway.routes[0].id=discovery-route
spring.cloud.gateway.routes[0].uri=http://eureka:password@${ZIPKIN_HOST:localhost}:9091
spring.cloud.gateway.routes[0].predicates[0]=Path=/eureka/web
spring.cloud.gateway.routes[0].filters[0]=SetPath=/

# Discover Server Static Resources Route
spring.cloud.gateway.routes[1].id=discovery-server-static
spring.cloud.gateway.routes[1].uri=http://eureka:password@${ZIPKIN_HOST:localhost}:9091
spring.cloud.gateway.routes[1].predicates[0]=Path=/eureka/**

# Auth Service Route
spring.cloud.gateway.routes[2].id=auth-route
spring.cloud.gateway.routes[2].uri=lb://auth-service
spring.cloud.gateway.routes[2].predicates[0]=Path=/auth/**
spring.cloud.gateway.routes[2].filters[0]=RewritePath=/auth(?<segment>.*), /api/v1/auth$\{segment}

# Account Route
spring.cloud.gateway.routes[3].id=account-route
spring.cloud.gateway.routes[3].uri=lb://account-service
spring.cloud.gateway.routes[3].predicates[0]=Path=/account/**
spring.cloud.gateway.routes[3].filters[0]=RewritePath=/account(?<segment>.*), /api/v1/account$\{segment}

# Friendship Route
spring.cloud.gateway.routes[4].id=friendship-route
spring.cloud.gateway.routes[4].uri=lb://account-service
spring.cloud.gateway.routes[4].predicates[0]=Path=/friendship/**
spring.cloud.gateway.routes[4].filters[0]=RewritePath=/friendship(?<segment>.*), /api/v1/friendship$\{segment}


# File Route
spring.cloud.gateway.routes[5].id=file-route
spring.cloud.gateway.routes[5].uri=lb://file-service
spring.cloud.gateway.routes[5].predicates[0]=Path=/file/**
spring.cloud.gateway.routes[5].filters[0]=RewritePath=/file(?<segment>.*), /api/v1/file$\{segment}

# File Management Route
spring.cloud.gateway.routes[6].id=file-management-route
spring.cloud.gateway.routes[6].uri=lb://file-service
spring.cloud.gateway.routes[6].predicates[0]=Path=/file-management/**
spring.cloud.gateway.routes[6].filters[0]=RewritePath=/file-management(?<segment>.*), /$\{segment}

# Location Service Route
spring.cloud.gateway.routes[7].id=location-route
spring.cloud.gateway.routes[7].uri=lb://location-service
spring.cloud.gateway.routes[7].predicates[0]=Path=/checkin/**
spring.cloud.gateway.routes[7].filters[0]=RewritePath=/checkin(?<segment>.*), /api/v1/checkin$\{segment}

# Post Service Route
spring.cloud.gateway.routes[8].id=post-route
spring.cloud.gateway.routes[8].uri=lb://post-service
spring.cloud.gateway.routes[8].predicates[0]=Path=/post/**
spring.cloud.gateway.routes[8].filters[0]=RewritePath=/post(?<segment>.*), /api/v1/post$\{segment}

# Realtime register Route
spring.cloud.gateway.routes[9].id=realtime-subcribe-route
spring.cloud.gateway.routes[9].uri=lb://realtime-service
spring.cloud.gateway.routes[9].predicates[0]=Path=/realtime/**

# Realtime send to Route
spring.cloud.gateway.routes[10].id=realtime-sendto-route
spring.cloud.gateway.routes[10].uri=lb://realtime-service
spring.cloud.gateway.routes[10].predicates[0]=Path=/topic/**

# Realtime send to Route
spring.cloud.gateway.routes[11].id=realtime-subcribe-route
spring.cloud.gateway.routes[11].uri=lb://realtime-service
spring.cloud.gateway.routes[11].predicates[0]=Path=/app/**

# Realtime send comment to Route
spring.cloud.gateway.routes[12].id=realtime-comment-route
spring.cloud.gateway.routes[12].uri=lb://realtime-service
spring.cloud.gateway.routes[12].predicates[0]=Path=/comment-post/**

# Profile Route
spring.cloud.gateway.routes[13].id=profile-route
spring.cloud.gateway.routes[13].uri=lb://account-service
spring.cloud.gateway.routes[13].predicates[0]=Path=/profile/**
spring.cloud.gateway.routes[13].filters[0]=RewritePath=/profile(?<segment>.*), /api/v1/profile$\{segment}


## Distribute tracing
# management.zipkin.tracing.endpoint=http://${ZIPKIN_HOST:localhost}:9411/api/v2/spans
# management.tracing.sampling.probability=1.0
#
## Prometheus
# management.endpoints.web.exposure.include= prometheus
