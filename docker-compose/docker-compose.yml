---
version: "3.7"
services:
  ## MySQL
  mysql-db:
    image: mysql:8.0
    container_name: mysql-db
    ports:
      - "${DB_PORT}:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    extends:
      file: common-config.yml
      service: microservice-base-config
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost -p${DB_ROOT_PASSWORD}"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  ## Zipkin
  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    ports:
      - "9411:9411"
    healthcheck:
      test: "wget -q --spider http://localhost:9411/health || exit 1"
      interval: 20s
      timeout: 5s
      retries: 3
      start_interval: 10s
    extends:
      file: common-config.yml
      service: microservice-base-config
    environment:
      SERVER_NAME: "zipkin-server"

  facebook-clone-be:
    container_name: facebook-clone-be
    image: robocon321/facebook-clone-be:latest
    ports:
      - "9090:9090"
      - "9091:9091"
    depends_on:
      zipkin:
        condition: service_healthy
      mysql-db:
        condition: service_healthy
    healthcheck:
      test: "curl --fail --silent http://localhost:9090/actuator/health | grep UP || exit 1"
      interval: 2m
      timeout: 2m
      retries: 3
      start_interval: 2m
    extends:
      file: common-config.yml
      service: microservice-base-config
    environment:
      DB_PROTOCOL: ${DB_PROTOCOL}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_DATABASE: ${DB_DATABASE}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_DRIVER: ${DB_DRIVER}
      DB_HIBERNATE_DIALECT: ${DB_HIBERNATE_DIALECT}
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRE: ${JWT_EXPIRE}
      SPRING_SECURITY_USERNAME: ${SPRING_SECURITY_USERNAME}
      SPRING_SECURITY_PASSWORD: ${SPRING_SECURITY_PASSWORD}
      ZIPKIN_HOST: ${ZIPKIN_HOST}
      DISCOVERYSERVER_HOST: ${DISCOVERYSERVER_HOST}

  ## Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: always
    ports:
      - "9900:9090"
    volumes:
      - ../prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    # depends_on:
    #   facebook-clone-be:
    #     condition: service_healthy
    extends:
      file: common-config.yml
      service: microservice-base-config
    environment:
      SERVER_NAME: "prometheus"

  # Grafana
  grafana:
    image: grafana/grafana-enterprise
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - ../grafana:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=${GF_SECURITY_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}
    extends:
      file: common-config.yml
      service: microservice-base-config
    user: "root:root"

networks:
  robocon321:
    driver: "bridge"
